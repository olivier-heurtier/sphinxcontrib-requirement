
.. highlight:: rest

Requirement Extension
=====================

``sphinxcontrib.requirement`` is a sphinx extension for managing requirements.
It can be used to:

* declare requirement (id are automatically generated)
* reference requirements (links are automatically generated)
* filer and sort a list of requirements in a table

It is compatible with HTML and LaTeX/PDF output.

Configure Sphinx
----------------

To enable this extension, add ``sphinxcontrib.requirement`` module to extensions
option at :file:`conf.py`.

.. code-block:: python

   # Enabled extensions
   extensions = ['sphinxcontrib.requirement']


Directives
----------

.. rst:directive:: .. req:req:: [title]

    This directive inserts a new requirement.

    By default, the id is generated by incrementing a counter in the scope of the
    requirement prefix. The id can also be explicitely defined using the
    option ``reqid``.

    The directive content can include other Sphinx markups to define bold text,
    bullet list, etc. As a special case, a single *line block* markup (the pipe
    ``|``) can be used to define the beginning of a comment section. A special
    style is applied to the comment section (using italic font).

    As the requirement content may be copied multiple times (for instance, if
    included in a requirement table generated by the :rst:dir:`req:reqlist`),
    it is strongly advised to avoid markups or directives that can have side
    effects (for example: ``versionadded``, because they are
    analyzed by the ``changes`` builder).

    This directive accepts the following options:

    * ``reqid``: define the requirement id
    * ``csv-file``: an external csv file (separated with ``,``) giving the requirements
      attributes (such as ``reqid``, ``title``, ``content``, etc.).
      The first line must list the field names
      included in the following lines. All requirements are imported and
      created using the other attributes (if specified)
    * ``filter``: a filtering expression used when importing a CSV.
      Example: ``reqid=='0001'``
    * ``sort``: a sorting expression used when importing a CSV.
      Example: ``reqid,-title`` (the character ``-`` is used to reverse the order)

.. rst:directive:: req:reqlist:: [caption]

    This directive generates a table with the selected requirements defined in
    the document.

    This directive accepts the following options:

    * ``filter``: a filtering expression used when importing a CSV.
      Example: ``reqid=='0001'``
    * ``sort``: a sorting expression used when importing a CSV.
      Example: ``reqid,-title`` (the character ``-`` is used to reverse the order)
    * ``fields``: specify the fields to be included in the table.
      Default: `reqid, title`
    * ``headers``: specify the column headers.
      Default: ``ID, Title``

    The default rendering is using ``list-table`` and all its options can be used
    (``width``, ``widths``, ``align``, ``header-rows``, ``stub-columns``).

    The content of the directive can be used to change the rendering from the default list/table to something
    different.

Roles
-----

.. rst:role:: req:req

    This role can be used to generate references to requirements.

    It supports reference with the full id (as printed in the output).

    It supports also reference across multiple rst files.

.. rst:role:: req:ref

    This role can be used to generate links to references to requirements.
    It is useful to list every places where a given requirement is referenced using ``req:req``.

    It supports also reference across multiple rst files.


Configuration File Options
--------------------------

req_reference_text

    The string (at least one character) inserted in the text when using the role `req:ref`

req_options

    A dictionary of options added to the directive ``req:req``. This can be used to customize
    the attributes of the requirement objects. For example, to add a priority attribute to the
    requirements, use::

        req_options = dict(
            priority="directives.positive_int",
        )

req_idpattern

    A *format* string used when generating a new identifier. Default: ``REQ-{:04d}``

req_html_css

    A string defining the CSS for HTML output

req_latex_preamble

    A string defining the LaTeX preamble


